// Generated by CoffeeScript 1.10.0
(function() {
  var BodyParser, Express, IPC, Path, Portfinder, Server,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Path = require('path');

  Express = require('express');

  BodyParser = require('body-parser');

  Portfinder = require('portfinder');

  IPC = require('../utils/ipc');

  Server = (function() {
    function Server() {
      this.listeningHandler = bind(this.listeningHandler, this);
      this.port = NaN;
      this.root = null;
      this.cfg = null;
      this.ipc = new IPC(process, this);
    }

    Server.prototype.init = function(cfg) {
      this.cfg = cfg;
      this.root = Path.join(this.cfg.base, this.cfg.tmp, this.cfg.root);
      this.express = Express();
      this.express.use(BodyParser.json());
      this.express.use(BodyParser.urlencoded({
        extended: true
      }));
      this.express.use('/', Express["static"](this.root));
      this.express.get('*', (function(_this) {
        return function(request, response, next) {
          return response.sendFile(Path.join(_this.root, '/index.html'));
        };
      })(this));
      Portfinder.basePort = 3001;
      Portfinder.getPort((function(_this) {
        return function(error, port) {
          if (!error) {
            _this.port = port;
            return _this.server = _this.express.listen(port, _this.listeningHandler);
          }
        };
      })(this));
      return null;
    };

    Server.prototype.listeningHandler = function() {
      this.ipc.send('serverReady', this.port);
      return null;
    };

    return Server;

  })();

  module.exports = new Server();

}).call(this);
