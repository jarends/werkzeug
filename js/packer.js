// Generated by CoffeeScript 1.10.0
(function() {
  var CP, IPC, PACKER, Packer, Path, SW;

  Path = require('path');

  CP = require('child_process');

  SW = require('./utils/stopwatch');

  IPC = require('./utils/ipc');

  PACKER = Path.join(__dirname, 'packer', 'packer-process');

  Packer = (function() {
    function Packer(wz) {
      this.wz = wz;
      this.initialized = false;
      this.cfg = this.wz.cfg;
      this.packer = new IPC(CP.fork(PACKER), this);
      this.packer.send('init', this.cfg);
    }

    Packer.prototype.pack = function(files) {
      if (files && files.length) {
        console.log("start packing...".cyan);
        SW.start('packer');
        if (!this.initialized) {
          this.packer.send('readPackages');
        } else {
          this.packer.send('update', files);
        }
      } else {
        this.wz.packed();
      }
      return null;
    };

    Packer.prototype.packed = function(errors) {
      var l, t;
      t = SW.stop('packer');
      l = errors.length;
      if (l > 0) {
        console.log(("packed in " + t + "ms with " + l + " " + (l > 1 ? 'errors' : 'error')).red, errors);
      } else {
        console.log(("packed in " + t + "ms without errors").green);
      }
      this.initialized = true;
      this.errors = errors;
      this.wz.packed();
      return null;
    };

    Packer.prototype.exit = function() {
      this.packer.exit();
      return null;
    };

    return Packer;

  })();

  module.exports = Packer;

}).call(this);
