// Generated by CoffeeScript 1.10.0
(function() {
  var CP, IPC, PACKER, Packer, SW;

  CP = require('child_process');

  SW = require('./utils/stopwatch');

  IPC = require('./utils/ipc');

  PACKER = __dirname + '/packer/packer';

  Packer = (function() {
    function Packer(wz) {
      this.wz = wz;
      this.initialized = false;
      this.cfg = this.wz.cfg;
      this.packer = new IPC(CP.fork(PACKER), this);
      this.inited = false;
      this.packer.send('init', this.cfg);
    }

    Packer.prototype.pack = function(files) {
      console.log('pack!!!');
      SW.start('packer');
      if (!this.initialized) {
        this.packer.send('readPackages');
      } else {
        this.packer.send('update', files);
      }
      return null;
    };

    Packer.prototype.packed = function(errors) {
      console.log("packed in " + (SW.stop('packer')) + "ms");
      this.initialized = true;
      this.wz.packed();
      return null;
    };

    Packer.prototype.exit = function() {
      return this.packer.exit();
    };

    return Packer;

  })();

  module.exports = Packer;

}).call(this);

//# sourceMappingURL=packer.js.map
